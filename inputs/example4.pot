main = case m of
          None -> None
        | Val(v1) -> (op v1)
        | Node(q1,q2) -> (case (f q1 op) of
                             None -> (case (f q2 op) of
                                         None -> None
                                       | Val(v1) -> Node(f q1 op,f q2 op)
                                       | Node(m1,m2) -> Node(f q1 op,f q2 op))
                           | Val(v2) -> Node(f q1 op,f q2 op)
                           | Node(l1,l2) -> Node(f q1 op,f q2 op))) m op;

f op m = case m of
          None -> None
        | Val(v1) -> (op v1)
        | Node(q1,q2) -> (case (f q1 op) of
                             None -> (case (f q2 op) of
                                         None -> None
                                       | Val(v1) -> Node(f q1 op,f q2 op)
                                       | Node(m1,m2) -> Node(f q1 op,f q2 op))
                           | Val(v2) -> Node(f q1 op,f q2 op)
                           | Node(l1,l2) -> Node(f q1 op,f q2 op))) m op

